# Generated by Django 2.2.7 on 2020-01-05 08:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='IFUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'Uživatel',
                'verbose_name_plural': 'Uživatelé',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BaseProfession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Název povolání', max_length=50, verbose_name='Název povolání')),
                ('str_min', models.SmallIntegerField(default=0, verbose_name='Síla minimum')),
                ('str_max', models.SmallIntegerField(default=0, verbose_name='Síla maximum')),
                ('dex_min', models.SmallIntegerField(default=0, verbose_name='Obratnost minimum')),
                ('dex_max', models.SmallIntegerField(default=0, verbose_name='Obratnost maximum')),
                ('res_min', models.SmallIntegerField(default=0, verbose_name='Odolnost minimum')),
                ('res_max', models.SmallIntegerField(default=0, verbose_name='Odolnost maximum')),
                ('int_min', models.SmallIntegerField(default=0, verbose_name='Inteligence minimum')),
                ('int_max', models.SmallIntegerField(default=0, verbose_name='Inteligence maximum')),
                ('cha_min', models.SmallIntegerField(default=0, verbose_name='Charisma minimum')),
                ('cha_max', models.SmallIntegerField(default=0, verbose_name='Charisma maximum')),
                ('hp_start', models.SmallIntegerField(default=0, verbose_name='Počáteční životy')),
                ('hp_dice', models.SmallIntegerField(default=0, verbose_name='Kostka na životy')),
                ('hp_dice_fix', models.SmallIntegerField(default=0, verbose_name='Oprava kostky na životy')),
                ('hp_9', models.SmallIntegerField(default=0, verbose_name='Životy od 9 úrovně')),
                ('parent_prof', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.BaseProfession', verbose_name='Vychází z povolání')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_base.baseprofession_set+', to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'Povolání',
                'verbose_name_plural': 'Povolání',
            },
        ),
        migrations.CreateModel(
            name='CreatureSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='A', max_length=8, unique=True, verbose_name='Velikost')),
            ],
            options={
                'verbose_name': 'Velikostní třída',
                'verbose_name_plural': 'Velikostní třídy',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Název rasy', max_length=50, verbose_name='Název rasy')),
                ('str_min', models.SmallIntegerField(default=0, verbose_name='Síla minimum')),
                ('str_max', models.SmallIntegerField(default=0, verbose_name='Síla maximum')),
                ('str_fix', models.SmallIntegerField(default=0, verbose_name='Síla oprava')),
                ('dex_min', models.SmallIntegerField(default=0, verbose_name='Obratnost minimum')),
                ('dex_max', models.SmallIntegerField(default=0, verbose_name='Obratnost maximum')),
                ('dex_fix', models.SmallIntegerField(default=0, verbose_name='Obratnost oprava')),
                ('res_min', models.SmallIntegerField(default=0, verbose_name='Odolnost minimum')),
                ('res_max', models.SmallIntegerField(default=0, verbose_name='Odolnost maximum')),
                ('res_fix', models.SmallIntegerField(default=0, verbose_name='Odolnost oprava')),
                ('int_min', models.SmallIntegerField(default=0, verbose_name='Inteligence minimum')),
                ('int_max', models.SmallIntegerField(default=0, verbose_name='Inteligence maximum')),
                ('int_fix', models.SmallIntegerField(default=0, verbose_name='Inteligence oprava')),
                ('cha_min', models.SmallIntegerField(default=0, verbose_name='Charisma minimum')),
                ('cha_max', models.SmallIntegerField(default=0, verbose_name='Charisma maximum')),
                ('cha_fix', models.SmallIntegerField(default=0, verbose_name='Charisma oprava')),
            ],
            options={
                'verbose_name': 'Rasa',
                'verbose_name_plural': 'Rasy',
            },
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Jméno', max_length=20, verbose_name='Jméno statu')),
                ('shortcut', models.CharField(default='BLK', max_length=3, verbose_name='Zkratka statu')),
            ],
        ),
        migrations.CreateModel(
            name='XPLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.SmallIntegerField(default=0, verbose_name='Úroveň')),
                ('xp_needed', models.IntegerField(default=0, verbose_name='Zkušenosti')),
                ('money_needed', models.IntegerField(default=0, verbose_name='Cena')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.BaseProfession')),
            ],
            options={
                'verbose_name': 'Úroveň',
                'verbose_name_plural': 'Úrovně',
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_name', models.CharField(max_length=50, null=True, verbose_name='Jméno postavy')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Vlastník')),
                ('profession', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.BaseProfession', verbose_name='Povolání')),
                ('race', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Race', verbose_name='Rasa')),
            ],
            options={
                'verbose_name': 'Postava',
                'verbose_name_plural': 'Postavy',
            },
        ),
        migrations.AddField(
            model_name='ifuser',
            name='active_char',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Character', verbose_name='Aktivní postava'),
        ),
        migrations.AddField(
            model_name='ifuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='ifuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
